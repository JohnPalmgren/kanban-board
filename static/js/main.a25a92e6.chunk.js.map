{"version":3,"sources":["components/Card/Card.module.css","components/Heading/Heading.module.css","components/Columns/Columns.module.css","components/Modals/Backdrop/Backdrop.module.css","components/Card/Card.js","components/Columns/Column.js","components/Columns/Columns.js","images/logo.png","components/Heading/Heading.js","components/Modals/Backdrop/Backdrop.js","components/Modals/Modal/Modal.js","components/Modals/ModalDisplay.js","components/Modals/DeleteModal/DeleteModal.js","components/Modals/DeleteModalDisplay.js","App.js","reportWebVitals.js","index.js","components/Modals/UI/Modal.module.css","components/Columns/Column.module.css"],"names":["module","exports","Card","props","clickHandler","delete","id","column","draggableId","index","provided","className","classes","card","ref","innerRef","draggableProps","dragHandleProps","listStyles","content","onClick","icon","Column","displayModal","setColumnState","type","toDo","inProgress","droppableId","droppableProps","columnOne","columnTwo","columnThree","heading","title","button","color","size","columnStyle","input","map","value","uid","userInput","placeholder","Columns","columnsStyles","done","Heading","wrapper","src","logo","alt","Backdrop","hideModal","backdrop","Modal","userInputs","useRef","onSubmit","event","preventDefault","current","Date","now","toString","autoFocus","buttonWrapper","ModalDisplay","Fragment","reactDOM","createPortal","document","getElementById","DeleteModal","item","DeleteModalDisplay","library","add","fas","App","useState","modalVisibility","setModalVisibility","delModalVisibility","setDelModalVisibility","currentColumn","setCurrentColumn","deleteData","setDeleteData","deleteItem","setDeleteItem","setToDo","setInProgress","setDone","removeDelete","currentList","prevItems","filter","onDragEnd","result","destination","source","beingDragged","sourceColumn","destinationColumn","splice","newItems","data","forEach","deleteItemName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a25a92e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listStyles\":\"Card_listStyles__2SlHP\",\"card\":\"Card_card__1kiwH\",\"delete\":\"Card_delete__2OAPd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__DzL3k\",\"logo\":\"Heading_logo__3HB-k\",\"wrapper\":\"Heading_wrapper__3FpHM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columnsStyles\":\"Columns_columnsStyles__3-L1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__LRvrz\"};","import classes from \"./Card.module.css\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Draggable } from \"react-beautiful-dnd\"\r\n\r\n\r\nconst Card = props => {\r\n\r\n  const clickHandler = () => {\r\n    props.delete([props.id, props.column])\r\n  }\r\n\r\n    return (\r\n      <Draggable draggableId={props.id} index={props.index}>\r\n        {(provided) => (\r\n          <div\r\n            className={classes.card}\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <div className={classes.listStyles}>\r\n              {props.content}\r\n              <FontAwesomeIcon\r\n                onClick={clickHandler}\r\n                icon={[\"fas\", \"trash\"]}\r\n                className={classes.delete}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n};\r\n\r\nexport default Card","import classes from \"./Column.module.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Card from \"../Card/Card\";\r\nimport { Droppable } from \"react-beautiful-dnd\"\r\n\r\nconst Column = (props) => {\r\n  const clickHandler = () => {\r\n    props.displayModal();\r\n    props.setColumnState(props.type);\r\n  };\r\n\r\n  const toDo = props.type === \"toDo\";\r\n  const inProgress = props.type === \"inProgress\";\r\n\r\n  return (\r\n    <Droppable droppableId={props.type}>\r\n      {(provided) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.droppableProps}\r\n          className={\r\n            toDo\r\n              ? classes.columnOne\r\n              : inProgress\r\n              ? classes.columnTwo\r\n              : classes.columnThree\r\n          }\r\n        >\r\n          <h2 className={classes.heading}>\r\n            {props.title}\r\n            <button onClick={clickHandler} className={classes.button}>\r\n              <FontAwesomeIcon\r\n                icon={[\"fas\", \"plus\"]}\r\n                color={\"white\"}\r\n                size={\"lg\"}\r\n              />\r\n            </button>\r\n          </h2>\r\n\r\n          <div className={classes.columnStyle}>\r\n            {props.input.map((value, index) => {\r\n              return (\r\n                <Card\r\n                  key={value.uid}\r\n                  delete={props.delete}\r\n                  id={value.uid}\r\n                  content={value.userInput}\r\n                  column={props.type}\r\n                  index={index}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {provided.placeholder}\r\n        </div>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import Column from \"./Column\"\r\nimport classes from \"./Columns.module.css\"\r\n\r\n\r\nconst Columns = props => {\r\n\r\n\r\n  return (\r\n    <div className={classes.columnsStyles}>\r\n      <Column\r\n        setColumnState={props.setColumnState}\r\n        displayModal={props.displayModal}\r\n        input={props.toDo}\r\n        title=\"To Do\"\r\n        type=\"toDo\"\r\n        delete={props.delete}\r\n      />\r\n\r\n      <Column\r\n        setColumnState={props.setColumnState}\r\n        displayModal={props.displayModal}\r\n        input={props.inProgress}\r\n        title=\"In Progress\"\r\n        type=\"inProgress\"\r\n        delete={props.delete}\r\n      />\r\n\r\n      <Column\r\n        setColumnState={props.setColumnState}\r\n        displayModal={props.displayModal}\r\n        input={props.done}\r\n        title=\"Done\"\r\n        type=\"done\"\r\n        delete={props.delete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Columns;","export default __webpack_public_path__ + \"static/media/logo.77f88b9c.png\";","import classes from \"./Heading.module.css\";\r\nimport logo from \"../../images/logo.png\"\r\n\r\nconst Heading = () => {\r\n    return <div className={classes.wrapper}>\r\n        <h1 className={classes.heading}>Kanban Ninja</h1>\r\n        <img src={logo} alt=\"logo\" className={classes.logo} />\r\n    </div>\r\n};\r\n\r\nexport default Heading","import classes from \"./Backdrop.module.css\"\r\n\r\nconst Backdrop = props => {\r\n\r\n    const clickHandler = () => props.hideModal();\r\n\r\n    return <div onClick={clickHandler} className={classes.backdrop}></div>\r\n}\r\n\r\nexport default Backdrop;","import classes from \"../UI/Modal.module.css\"\r\nimport { useRef } from \"react\"\r\nconst Modal = props => {\r\n\r\n\r\n  const userInputs = useRef()\r\n\r\n  const clickHandler = () => props.hideModal();\r\n\r\n  const getUserInput = event => {\r\n    event.preventDefault();\r\n    props.userInput({userInput:userInputs.current.value, uid:Date.now().toString()})\r\n  }\r\n\r\n    return (\r\n      <div className={classes.wrapper}>\r\n        <form onSubmit={getUserInput}>\r\n          <h1 className={classes.heading}>Add a task</h1>\r\n          <input\r\n            type={\"text\"}\r\n            className={classes.input}\r\n            autoFocus\r\n            ref={userInputs}\r\n          ></input>\r\n          <div className={classes.buttonWrapper}>\r\n            <button type={\"submit\"}>Add</button>\r\n            <button onClick={clickHandler} type={\"button\"}>\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Modal;","import Backdrop from \"./Backdrop/Backdrop\"\r\nimport Modal from \"./Modal/Modal\"\r\nimport React from \"react\"\r\nimport reactDOM from \"react-dom\";\r\n\r\n\r\nconst ModalDisplay = props => {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {reactDOM.createPortal(\r\n          <Backdrop hideModal={props.hideModal} />,\r\n          document.getElementById(\"backdrop\")\r\n        )}\r\n        {reactDOM.createPortal(\r\n          <Modal userInput={props.userInput} hideModal={props.hideModal} />,\r\n          document.getElementById(\"overlay\")\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ModalDisplay","import classes from \"../UI/Modal.module.css\"\r\n\r\nconst DeleteModal = props => {\r\n\r\n    const noClick = () => props.hideModal()\r\n    const yesClick = () => props.delete()\r\n\r\n    return <div className={classes.wrapper}>\r\n        <h2 className={classes.heading}>Are you sure you want to delete {props.item}</h2>\r\n        <div className={classes.buttonWrapper}>\r\n            <button type={\"button\"} onClick={yesClick}>Yes</button>\r\n            <button type={\"button\"} onClick={noClick}>No</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DeleteModal","import Backdrop from \"./Backdrop/Backdrop\";\r\nimport DeleteModal from \"./DeleteModal/DeleteModal\";\r\nimport React from \"react\";\r\nimport reactDOM from \"react-dom\";\r\n\r\n\r\nconst DeleteModalDisplay = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      {reactDOM.createPortal(\r\n        <Backdrop hideModal={props.hideModal} />,\r\n        document.getElementById(\"backdrop\")\r\n      )}\r\n      {reactDOM.createPortal(\r\n        <DeleteModal\r\n          item={props.item}\r\n          hideModal={props.hideModal}\r\n          delete={props.delete}\r\n        />,\r\n        document.getElementById(\"overlay\")\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DeleteModalDisplay;\r\n","import React from \"react\"\r\nimport Columns from \"./components/Columns/Columns\";\r\nimport Heading from \"./components/Heading/Heading\"\r\nimport ModalDisplay from \"./components/Modals/ModalDisplay\";\r\nimport DeleteModalDisplay from \"./components/Modals/DeleteModalDisplay\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nlibrary.add(fas);\r\n\r\nfunction App() {\r\n  const [modalVisibility, setModalVisibility] = useState(false);\r\n  const [delModalVisibility, setDelModalVisibility] = useState(false);\r\n\r\n  const displayModal = () => {\r\n    setModalVisibility(true);\r\n  };\r\n  const hideModal = () => {\r\n    setModalVisibility(false);\r\n  };\r\n\r\n  const [currentColumn, setCurrentColumn] = useState(\"toDo\");\r\n  const [deleteData, setDeleteData] = useState();\r\n  const [deleteItem, setDeleteItem] = useState();\r\n\r\n  const [toDo, setToDo] = useState([]);\r\n  const [inProgress, setInProgress] = useState([]);\r\n  const [done, setDone] = useState([]);\r\n\r\n  const columnStateHandler = (column) => setCurrentColumn(column);\r\n\r\n  /**\r\n   * Add user input into column where the add button was clicked\r\n   * @param {object} value  object containing user input and unique ID\r\n   */\r\n  const userInputHandler = (value) => {\r\n    if (!value.userInput) {\r\n      return;\r\n    } // could add style or error message here\r\n    if (currentColumn === \"toDo\") {\r\n      setToDo((currentList) => [value, ...currentList]);\r\n    } else if (currentColumn === \"inProgress\") {\r\n      setInProgress((currentList) => [value, ...currentList]);\r\n    } else {\r\n      setDone((currentList) => [value, ...currentList]);\r\n    }\r\n    hideModal();\r\n  };\r\n\r\n  /**\r\n   * Update state with the name of the item that has been triggered by delete button.\r\n   * @param {array} data array where item 0 corresponds to the\r\n   * item UID and item 1 corresponds to the items column position.\r\n   */\r\n  const deleteItemName = (data) => {\r\n    if (data[1] === \"done\") {\r\n      done.forEach((item) => {\r\n        if (item.uid === data[0]) {\r\n          setDeleteItem(`\"${item.userInput}\"`);\r\n          return;\r\n        }\r\n      });\r\n    } else if (data[1] === \"inProgress\") {\r\n      inProgress.forEach((item) => {\r\n        if (item.uid === data[0]) {\r\n          setDeleteItem(`\"${item.userInput}\"`);\r\n          return;\r\n        }\r\n      });\r\n    } else if (data[1] === \"toDo\") {\r\n      toDo.forEach((item) => {\r\n        if (item.uid === data[0]) {\r\n          setDeleteItem(`\"${item.userInput}\"`);\r\n          return;\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update state to remove item where delete has been confirmed\r\n   */\r\n  const deleteLogic = () => {\r\n    if (deleteData[1] === \"done\") {\r\n      setDone((prevItems) => {\r\n        const updatedItems = prevItems.filter(\r\n          (item) => item.uid !== deleteData[0]\r\n        );\r\n        return updatedItems;\r\n      });\r\n    } else if (deleteData[1] === \"inProgress\") {\r\n      setInProgress((prevItems) => {\r\n        const updatedItems = prevItems.filter(\r\n          (item) => item.uid !== deleteData[0]\r\n        );\r\n        return updatedItems;\r\n      });\r\n    } else if (deleteData[1] === \"toDo\") {\r\n      setToDo((prevItems) => {\r\n        const updatedItems = prevItems.filter(\r\n          (item) => item.uid !== deleteData[0]\r\n        );\r\n        return updatedItems;\r\n      });\r\n    }\r\n    removeDelete();\r\n  };\r\n\r\n  /**\r\n   * Display modal to delete object and store item information in a state\r\n   * @param {array} data array where item 0 corresponds to the\r\n   * item UID and item 1 corresponds to the items column position.\r\n   */\r\n  const displayDelete = (data) => {\r\n    setDeleteData(data);\r\n    deleteItemName(data);\r\n    setDelModalVisibility(true);\r\n  };\r\n\r\n  /**\r\n   * hide the delete modal\r\n   */\r\n  const removeDelete = () => {\r\n    setDelModalVisibility(false);\r\n  };\r\n\r\n  /**\r\n   * Display item in the correct column at the end of a drag event. Remove\r\n   * the item from the column it was being dragged from and create the item\r\n   * in the column it is dropped into or re-order the items in the column\r\n   * if it's dropped in it's original column\r\n   * @param {object} result object with information on item's UID, drag column,\r\n   * drop column and index in each column.\r\n   */\r\n  const onDragEnd = (result) => {\r\n    const { destination, source, draggableId } = result;\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const sourceColumn = source.droppableId;\r\n    const destinationColumn = destination.droppableId;\r\n\r\n    let beingDragged;\r\n\r\n    // remove item from column when dragged\r\n\r\n\r\n    if (sourceColumn === \"toDo\") {\r\n   \r\n      const dragObj = toDo.filter((item) => item.uid === draggableId);\r\n      beingDragged = dragObj[0];\r\n\r\n      if (sourceColumn === destinationColumn) {\r\n        setToDo((prevItems) => {\r\n          const newItems = prevItems.splice(source.index, 1);\r\n          return newItems;\r\n        });\r\n      } else {\r\n        setToDo((prevItems) => {\r\n          const updatedItems = prevItems.filter(\r\n            (item) => item.uid !== draggableId\r\n          );\r\n          return updatedItems;\r\n        });\r\n      }\r\n    }\r\n\r\n    if (sourceColumn === \"inProgress\") {\r\n      const dragObj = inProgress.filter((item) => item.uid === draggableId);\r\n      beingDragged = dragObj[0];\r\n\r\n      if (sourceColumn === destinationColumn) {\r\n        setInProgress((prevItems) => {\r\n          const newItems = prevItems.splice(source.index, 1);\r\n          return newItems;\r\n        });\r\n      } else {\r\n        setInProgress((prevItems) => {\r\n          const updatedItems = prevItems.filter(\r\n            (item) => item.uid !== draggableId\r\n          );\r\n          return updatedItems;\r\n        });\r\n      }\r\n    }\r\n\r\n    if (sourceColumn === \"done\") {\r\n      const dragObj = done.filter((item) => item.uid === draggableId);\r\n      beingDragged = dragObj[0];\r\n\r\n\r\n      if (sourceColumn === destinationColumn) {\r\n        setDone((prevItems) => {\r\n          const newItems = prevItems.splice(source.index, 1);\r\n          return newItems;\r\n        });\r\n      } else {\r\n        setDone((prevItems) => {\r\n          const updatedItems = prevItems.filter(\r\n            (item) => item.uid !== draggableId\r\n          );\r\n          return updatedItems;\r\n        });\r\n      }\r\n    }\r\n\r\n    if (destinationColumn === \"toDo\") {\r\n      const newItems = [...toDo];\r\n      newItems.splice(destination.index, 0, beingDragged);\r\n      setToDo(newItems);\r\n    }\r\n\r\n    if (destinationColumn === \"inProgress\") {\r\n      const newItems = [...inProgress];\r\n      newItems.splice(destination.index, 0, beingDragged);\r\n      setInProgress(newItems);\r\n    }\r\n\r\n    if (destinationColumn === \"done\") {\r\n      const newItems = [...done];\r\n      newItems.splice(destination.index, 0, beingDragged);\r\n      setDone(newItems);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Heading />\r\n      {modalVisibility ? (\r\n\r\n        <ModalDisplay userInput={userInputHandler} hideModal={hideModal} />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      {delModalVisibility ? (\r\n        <DeleteModalDisplay\r\n          item={deleteItem}\r\n          hideModal={removeDelete}\r\n          delete={deleteLogic}\r\n        />\r\n      ) : (\r\n        <div></div>\r\n      )}\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Columns\r\n          setColumnState={columnStateHandler}\r\n          displayModal={displayModal}\r\n          toDo={toDo}\r\n          inProgress={inProgress}\r\n          done={done}\r\n          delete={displayDelete}\r\n        />\r\n      </DragDropContext>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Modal_wrapper__26INj\",\"heading\":\"Modal_heading__3G-Tq\",\"input\":\"Modal_input__1Ajbz\",\"buttonWrapper\":\"Modal_buttonWrapper__4JuBG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columnStyle\":\"Column_columnStyle__3unZz\",\"columnOne\":\"Column_columnOne__B4rcO\",\"columnTwo\":\"Column_columnTwo__1K65D\",\"columnThree\":\"Column_columnThree__2yVkR\",\"heading\":\"Column_heading__2s7JO\",\"button\":\"Column_button__-1OhS\"};"],"sourceRoot":""}